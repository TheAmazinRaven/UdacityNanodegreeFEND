{"filter":false,"title":"scope.js","tooltip":"/JavaScript/intro to JavaScript/Lesson 4 - Loops/scope.js","undoManager":{"mark":11,"position":11,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["/"],"id":1},{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["*"]}],[{"start":{"row":0,"column":2},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":2,"column":0},"end":{"row":11,"column":44},"action":"insert","lines":["More to Read - Scope and Variable Declaration","At this point, you need to understand that there are ways to declare a variable, by using let, const or var. To understand the difference between the three, first you need to understand the term scope.","","What is a \"Scope\"?","The scope is defined as a specific portion of the code. There are three types of scope in Javascript","","Global scope - When a particular variable is visible (can be used) anywhere in the code. Such a variable is generally called as Global variable.","Function scope - When a particular variable is visible (can be used) within a particular function only. Such a variable is generally called as Local variable.","Block scope - When a particular variable is visible (can be used) within a pair of { . . . } only.","Let us see an example of each type of scope:"],"id":3}],[{"start":{"row":11,"column":44},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["",""]},{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"insert","lines":["*"]},{"start":{"row":13,"column":1},"end":{"row":13,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":13,"column":2},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":15,"column":0},"end":{"row":41,"column":24},"action":"insert","lines":["/*"," * Global scope. "," * This variable declared outside of any function is called Global variable. "," * Hence, you can use this anywhere in the code"," */","var opinion = \"This nanodegree is amazing\";","","// Function scope","function showMessage() {","    // Local variable, visible within the function `showMessage`","    var message = \"I am an Udacian!\"; ","","    // Block scope","    {","          let greet = \"How are you doing?\";","        /*","         * We have used the keyword `let` to declare a variable `greet` because variables declared with the `var` keyword can not have Block Scope. ","         */","    } // block scope ends","","    console.log( message ); // OK","    console.log( greet ); // ERROR. ","    // Variable greet can NOT be used outside the block","","    console.log( opinion ); // OK    to use the gobal variable anywhere in the code","","} // function scope ends"],"id":6}],[{"start":{"row":41,"column":24},"end":{"row":42,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":42,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":1},"action":"insert","lines":["/"],"id":8},{"start":{"row":43,"column":1},"end":{"row":43,"column":2},"action":"insert","lines":["*"]}],[{"start":{"row":43,"column":2},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":45,"column":0},"end":{"row":50,"column":234},"action":"insert","lines":["Variable Declaration","There are three ways to declare a variable:","","let - It a new way to declare a variable in any scope - Global, Local, or Block. The value of this variable can be changed or reassigned anytime within its scope.","const - It is also a way to declare constants in any scope - Global, Local, or Block. Once you are assigned a value to a const variable, the value of this variable CANNOT be changed or reassigned throughout the code.","var - This is the old way of declaring variables in only two scope - Global, or Local. Variables declared with the var keyword can not have Block Scope. The value of this variable can be changed or reassigned anytime within its scope."],"id":10}],[{"start":{"row":50,"column":234},"end":{"row":51,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":51,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["",""]},{"start":{"row":52,"column":0},"end":{"row":52,"column":1},"action":"insert","lines":["*"]},{"start":{"row":52,"column":1},"end":{"row":52,"column":2},"action":"insert","lines":["/"]}],[{"start":{"row":36,"column":3},"end":{"row":36,"column":4},"action":"insert","lines":["/"],"id":12},{"start":{"row":36,"column":4},"end":{"row":36,"column":5},"action":"insert","lines":["/"]}]]},"ace":{"folds":[],"scrolltop":69,"scrollleft":0,"selection":{"start":{"row":11,"column":28},"end":{"row":11,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":true,"wrapToView":true},"firstLineState":{"row":2,"state":"comment1","mode":"ace/mode/javascript"}},"timestamp":1651279579623,"hash":"d4a07db9946d0987c65f85bc411c7d79a23b80e4"}